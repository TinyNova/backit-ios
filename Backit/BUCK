load('//Config:configs.bzl', 'app_binary_configs', 'library_configs', 'watch_binary_configs', 'message_binary_configs', 'pretty', 'info_plist_substitutions', 'bundle_identifier', 'DEVELOPMENT_LANGUAGE')
load('//Config:buck_rule_macros.bzl', 'apple_lib', 'apple_test_lib', 'apple_test_all')

# Application Binary

apple_package(
    name = 'BackitPackage',
    bundle = 'Backit'
)

apple_bundle(
    name = 'Backit',
    visibility = ['//...'],
    binary = ':BackitAppBinary',
    extension = 'app',
    info_plist = 'Info.plist',
    info_plist_substitutions = {
        "DEVELOPMENT_LANGUAGE": DEVELOPMENT_LANGUAGE,
        "EXECUTABLE_NAME": "Backit",
        "PRODUCT_BUNDLE_IDENTIFIER": bundle_identifier("ios.backer"),
        "PRODUCT_NAME": "Backit",
    },
    deps = [
        # Hack projects to allow Xcode projects to build
        '//Carthage:CarthageLibrary',
        '//Pods:PodsLibrary',
        '//SDK:SDKLibrary',
    ]
#    tests = [':BackitAppTests']
)

# Application Files

apple_asset_catalog(
    name = 'BackitAssetCatalogs',
    dirs = [
        'Application/Resources/Assets.xcassets'
    ],
    app_icon = 'AppIcon'
)

apple_resource(
    name = 'BackitResources',
    dirs = [
        'Application/Resources/Fonts',
        'Application/Resources/robot-arm.atlasc'
    ]
)

apple_binary(
    name = 'BackitAppBinary',
    swift_version = '5',
    linker_flags = ['-lc++', '-lz'],
    configs = app_binary_configs("Backit"),
    deps = [':BackitAppLibrary'],
    frameworks = [
        '$SDKROOT/System/Library/Frameworks/Foundation.framework',
        '$SDKROOT/System/Library/Frameworks/UIKit.framework',

        '$SDKROOT/System/Library/Frameworks/CoreTelephony.framework',
        '$SDKROOT/System/Library/Frameworks/SystemConfiguration.framework',
        '$SDKROOT/System/Library/Frameworks/LocalAuthentication.framework',
        '$SDKROOT/System/Library/Frameworks/SafariServices.framework',
        '$SDKROOT/System/Library/Frameworks/SystemConfiguration.framework',

        '$SDKROOT/System/Library/Frameworks/CFNetwork.framework',
    ]
)

apple_library(
    name = 'BackitAppLibrary',
    visibility = ['//Application/...'],
    configs = library_configs(),
    bridging_header = 'Backit-Bridging-Header.h',
    deps = [
        ':BackitAssetCatalogs',
        ':BackitResources',

        ':BKFoundation',

        '//Pods:NewRelicAgent',

        '//SDK:GoogleSignIn',
        '//SDK:GoogleSignInDependencies',

        '//Carthage:Alamofire',
        '//Carthage:BrightFutures',
        '//Carthage:FacebookCore',
        '//Carthage:FacebookLogin',
        '//Carthage:FBSDKCoreKit',
        '//Carthage:FBSDKLoginKit',
        '//Carthage:FMDB',
        '//Carthage:Hero',
        '//Carthage:KeychainAccess',
        '//Carthage:SDWebImage',
        '//Carthage:Swinject',
        '//Carthage:SwinjectStoryboard'
    ],
    srcs = glob(
        [
            'main.swift',
            'Application/**/*.swift',
            'Domain/**/*.swift',
            'Service/**/*.swift',
            'UI/**/*.swift'
        ],
        exclude = ['Application/Analytics/MixpanelAnalyticsListener.swift']
    )
)

# Foundation

apple_library(
    name = 'BKFoundation',
    swift_version = '5',
    visibility = ['PUBLIC'],
    srcs = glob([
        'Foundation/**/*.swift'
    ])
)
